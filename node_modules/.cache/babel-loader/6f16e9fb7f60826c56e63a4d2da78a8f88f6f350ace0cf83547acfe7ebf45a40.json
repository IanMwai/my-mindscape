{"ast":null,"code":"var _jsxFileName = \"/Users/iantoyota/Desktop/my-mindscape/src/pages/ActivityRecsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { db } from '../firebaseConfig';\nimport { doc, getDoc, collection, getDocs } from 'firebase/firestore';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActivityRecommendationsPage = () => {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  const [userPreferences, setUserPreferences] = useState({});\n  const [allStaticActivities, setAllStaticActivities] = useState([]);\n  const [recommendedActivities, setRecommendedActivities] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Fetch user preferences and static activities on component mount\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!currentUser) {\n        setError('You must be logged in to view activity recommendations.');\n        setLoading(false);\n        return;\n      }\n      try {\n        // Fetch user preferences\n        const userDocRef = doc(db, 'users', currentUser.uid);\n        const userDocSnap = await getDoc(userDocRef);\n        if (userDocSnap.exists()) {\n          setUserPreferences(userDocSnap.data().activityPreferences || {});\n        }\n\n        // Fetch static activities\n        const activitiesCollectionRef = collection(db, 'staticActivities');\n        const activitiesSnapshot = await getDocs(activitiesCollectionRef);\n        const activitiesData = activitiesSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setAllStaticActivities(activitiesData);\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError('Failed to load recommendations. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [currentUser]);\n\n  // Generate recommendations whenever preferences or static activities change\n  useEffect(() => {\n    if (!loading && allStaticActivities.length > 0) {\n      generateRecommendations();\n    }\n  }, [loading, userPreferences, allStaticActivities]);\n  const generateRecommendations = () => {\n    const numRecommendations = 3; // Number of recommendations to display\n    let filteredActivities = [];\n\n    // Filtering logic based on user preferences\n    if (userPreferences) {\n      allStaticActivities.forEach(activity => {\n        let isMatch = false;\n\n        // Match by category and genre (music, books, movies)\n        if (userPreferences.musicGenres && activity.category === 'music') {\n          if (activity.genre && userPreferences.musicGenres.includes(activity.genre)) {\n            isMatch = true;\n          } else if (!activity.genre && userPreferences.musicGenres.length > 0) {\n            // If no specific genre, but user has music preferences\n            isMatch = true;\n          }\n        }\n        if (userPreferences.bookGenres && activity.category === 'books') {\n          if (activity.genre && userPreferences.bookGenres.includes(activity.genre)) {\n            isMatch = true;\n          } else if (!activity.genre && userPreferences.bookGenres.length > 0) {\n            isMatch = true;\n          }\n        }\n        if (userPreferences.movieGenres && activity.category === 'movies') {\n          if (activity.genre && userPreferences.movieGenres.includes(activity.genre)) {\n            isMatch = true;\n          } else if (!activity.genre && userPreferences.movieGenres.length > 0) {\n            isMatch = true;\n          }\n        }\n\n        // Match by physical activities (title included in preferences array)\n        if (userPreferences.physicalActivities && activity.category === 'physical') {\n          if (userPreferences.physicalActivities.includes(activity.title)) {\n            isMatch = true;\n          }\n        }\n\n        // Match by other interests (tags overlap)\n        if (userPreferences.otherInterests && activity.tags && activity.tags.length > 0) {\n          const commonTags = activity.tags.filter(tag => userPreferences.otherInterests.includes(tag));\n          if (commonTags.length > 0) {\n            isMatch = true;\n          }\n        }\n        if (isMatch) {\n          filteredActivities.push(activity);\n        }\n      });\n    }\n\n    // Fallback recommendations if no specific matches or not enough matches\n    let finalRecommendations = [];\n    if (filteredActivities.length === 0) {\n      // Randomly select from all static activities if no matches\n      const shuffledActivities = [...allStaticActivities].sort(() => 0.5 - Math.random());\n      finalRecommendations = shuffledActivities.slice(0, numRecommendations);\n    } else {\n      // Randomly select from filtered activities\n      const shuffledFiltered = [...filteredActivities].sort(() => 0.5 - Math.random());\n      finalRecommendations = shuffledFiltered.slice(0, numRecommendations);\n\n      // If not enough filtered activities, supplement with random ones\n      if (finalRecommendations.length < numRecommendations) {\n        const remainingNeeded = numRecommendations - finalRecommendations.length;\n        const existingIds = new Set(finalRecommendations.map(rec => rec.id));\n        const supplementalActivities = allStaticActivities.filter(act => !existingIds.has(act.id)).sort(() => 0.5 - Math.random()).slice(0, remainingNeeded);\n        finalRecommendations = [...finalRecommendations, ...supplementalActivities];\n      }\n    }\n    setRecommendedActivities(finalRecommendations);\n  };\n  const getCategoryIcon = category => {\n    switch (category) {\n      case 'music':\n        return 'ðŸŽµ';\n      case 'books':\n        return 'ðŸ“š';\n      case 'movies':\n        return 'ðŸŽ¬';\n      case 'physical':\n        return 'ðŸ’ª';\n      default:\n        return 'âœ¨';\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-text-dark text-lg\",\n      children: \"Loading recommendations...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-red-500 text-lg\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-[calc(100vh-80px)]\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-secondary-bg p-6 rounded-lg shadow-lg w-full max-w-4xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold mb-6 text-center text-text-dark\",\n        children: \"Activities to Brighten Your Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), recommendedActivities.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n        children: recommendedActivities.map(activity => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-4xl mb-2 text-center\",\n            children: getCategoryIcon(activity.category)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold mb-2 text-text-dark text-center\",\n            children: activity.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-700 text-sm mb-4 flex-grow\",\n            children: activity.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap gap-2 mb-4 justify-center\",\n            children: activity.tags && activity.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bg-highlight text-white text-xs px-2 py-1 rounded-full\",\n              children: tag\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this), activity.link && /*#__PURE__*/_jsxDEV(\"a\", {\n            href: activity.link,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"mt-auto bg-highlight text-white py-2 px-4 rounded-md hover:bg-opacity-90 transition-colors duration-200 text-center\",\n            children: activity.category === 'music' ? 'Listen Now' : activity.category === 'books' ? 'Read More' : activity.category === 'movies' ? 'Watch Now' : 'Start Activity'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 19\n          }, this)]\n        }, activity.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-700 text-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-4\",\n          children: \"No specific recommendations found based on your preferences.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Try updating your preferences or refreshing for generic suggestions.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center gap-4 mt-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: generateRecommendations,\n          className: \"bg-green-500 text-white py-2 px-4 rounded-md hover:bg-green-600 transition-colors duration-200\",\n          children: \"Refresh Suggestions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/account\",\n          className: \"bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition-colors duration-200\",\n          children: \"Update My Preferences\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(ActivityRecommendationsPage, \"kTIIXNkFWofg0iGV/QXiCf+4KIs=\", false, function () {\n  return [useAuth];\n});\n_c = ActivityRecommendationsPage;\nexport default ActivityRecommendationsPage;\nvar _c;\n$RefreshReg$(_c, \"ActivityRecommendationsPage\");","map":{"version":3,"names":["React","useState","useEffect","db","doc","getDoc","collection","getDocs","useAuth","Link","jsxDEV","_jsxDEV","ActivityRecommendationsPage","_s","currentUser","userPreferences","setUserPreferences","allStaticActivities","setAllStaticActivities","recommendedActivities","setRecommendedActivities","loading","setLoading","error","setError","fetchData","userDocRef","uid","userDocSnap","exists","data","activityPreferences","activitiesCollectionRef","activitiesSnapshot","activitiesData","docs","map","id","err","console","length","generateRecommendations","numRecommendations","filteredActivities","forEach","activity","isMatch","musicGenres","category","genre","includes","bookGenres","movieGenres","physicalActivities","title","otherInterests","tags","commonTags","filter","tag","push","finalRecommendations","shuffledActivities","sort","Math","random","slice","shuffledFiltered","remainingNeeded","existingIds","Set","rec","supplementalActivities","act","has","getCategoryIcon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","description","index","link","href","target","rel","onClick","to","_c","$RefreshReg$"],"sources":["/Users/iantoyota/Desktop/my-mindscape/src/pages/ActivityRecsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { db } from '../firebaseConfig';\nimport { doc, getDoc, collection, getDocs } from 'firebase/firestore';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Link } from 'react-router-dom';\n\nconst ActivityRecommendationsPage = () => {\n  const { currentUser } = useAuth();\n  const [userPreferences, setUserPreferences] = useState({});\n  const [allStaticActivities, setAllStaticActivities] = useState([]);\n  const [recommendedActivities, setRecommendedActivities] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Fetch user preferences and static activities on component mount\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!currentUser) {\n        setError('You must be logged in to view activity recommendations.');\n        setLoading(false);\n        return;\n      }\n\n      try {\n        // Fetch user preferences\n        const userDocRef = doc(db, 'users', currentUser.uid);\n        const userDocSnap = await getDoc(userDocRef);\n        if (userDocSnap.exists()) {\n          setUserPreferences(userDocSnap.data().activityPreferences || {});\n        }\n\n        // Fetch static activities\n        const activitiesCollectionRef = collection(db, 'staticActivities');\n        const activitiesSnapshot = await getDocs(activitiesCollectionRef);\n        const activitiesData = activitiesSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n        setAllStaticActivities(activitiesData);\n\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError('Failed to load recommendations. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [currentUser]);\n\n  // Generate recommendations whenever preferences or static activities change\n  useEffect(() => {\n    if (!loading && allStaticActivities.length > 0) {\n      generateRecommendations();\n    }\n  }, [loading, userPreferences, allStaticActivities]);\n\n  const generateRecommendations = () => {\n    const numRecommendations = 3; // Number of recommendations to display\n    let filteredActivities = [];\n\n    // Filtering logic based on user preferences\n    if (userPreferences) {\n      allStaticActivities.forEach(activity => {\n        let isMatch = false;\n\n        // Match by category and genre (music, books, movies)\n        if (userPreferences.musicGenres && activity.category === 'music') {\n          if (activity.genre && userPreferences.musicGenres.includes(activity.genre)) {\n            isMatch = true;\n          } else if (!activity.genre && userPreferences.musicGenres.length > 0) { // If no specific genre, but user has music preferences\n            isMatch = true;\n          }\n        }\n        if (userPreferences.bookGenres && activity.category === 'books') {\n          if (activity.genre && userPreferences.bookGenres.includes(activity.genre)) {\n            isMatch = true;\n          } else if (!activity.genre && userPreferences.bookGenres.length > 0) {\n            isMatch = true;\n          }\n        }\n        if (userPreferences.movieGenres && activity.category === 'movies') {\n          if (activity.genre && userPreferences.movieGenres.includes(activity.genre)) {\n            isMatch = true;\n          } else if (!activity.genre && userPreferences.movieGenres.length > 0) {\n            isMatch = true;\n          }\n        }\n\n        // Match by physical activities (title included in preferences array)\n        if (userPreferences.physicalActivities && activity.category === 'physical') {\n          if (userPreferences.physicalActivities.includes(activity.title)) {\n            isMatch = true;\n          }\n        }\n\n        // Match by other interests (tags overlap)\n        if (userPreferences.otherInterests && activity.tags && activity.tags.length > 0) {\n          const commonTags = activity.tags.filter(tag => userPreferences.otherInterests.includes(tag));\n          if (commonTags.length > 0) {\n            isMatch = true;\n          }\n        }\n\n        if (isMatch) {\n          filteredActivities.push(activity);\n        }\n      });\n    }\n\n    // Fallback recommendations if no specific matches or not enough matches\n    let finalRecommendations = [];\n    if (filteredActivities.length === 0) {\n      // Randomly select from all static activities if no matches\n      const shuffledActivities = [...allStaticActivities].sort(() => 0.5 - Math.random());\n      finalRecommendations = shuffledActivities.slice(0, numRecommendations);\n    } else {\n      // Randomly select from filtered activities\n      const shuffledFiltered = [...filteredActivities].sort(() => 0.5 - Math.random());\n      finalRecommendations = shuffledFiltered.slice(0, numRecommendations);\n\n      // If not enough filtered activities, supplement with random ones\n      if (finalRecommendations.length < numRecommendations) {\n        const remainingNeeded = numRecommendations - finalRecommendations.length;\n        const existingIds = new Set(finalRecommendations.map(rec => rec.id));\n        const supplementalActivities = allStaticActivities.filter(act => !existingIds.has(act.id))\n                                                          .sort(() => 0.5 - Math.random())\n                                                          .slice(0, remainingNeeded);\n        finalRecommendations = [...finalRecommendations, ...supplementalActivities];\n      }\n    }\n\n    setRecommendedActivities(finalRecommendations);\n  };\n\n  const getCategoryIcon = (category) => {\n    switch (category) {\n      case 'music': return 'ðŸŽµ';\n      case 'books': return 'ðŸ“š';\n      case 'movies': return 'ðŸŽ¬';\n      case 'physical': return 'ðŸ’ª';\n      default: return 'âœ¨';\n    }\n  };\n\n  if (loading) {\n    return <div className=\"text-center text-text-dark text-lg\">Loading recommendations...</div>;\n  }\n\n  if (error) {\n    return <div className=\"text-center text-red-500 text-lg\">Error: {error}</div>;\n  }\n\n  return (\n    <div className=\"flex items-center justify-center min-h-[calc(100vh-80px)]\">\n      <div className=\"bg-secondary-bg p-6 rounded-lg shadow-lg w-full max-w-4xl\">\n        <h2 className=\"text-3xl font-bold mb-6 text-center text-text-dark\">Activities to Brighten Your Day</h2>\n\n        {recommendedActivities.length > 0 ? (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {recommendedActivities.map(activity => (\n              <div key={activity.id} className=\"bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow flex flex-col\">\n                <div className=\"text-4xl mb-2 text-center\">{getCategoryIcon(activity.category)}</div>\n                <h3 className=\"text-xl font-semibold mb-2 text-text-dark text-center\">{activity.title}</h3>\n                <p className=\"text-gray-700 text-sm mb-4 flex-grow\">{activity.description}</p>\n                <div className=\"flex flex-wrap gap-2 mb-4 justify-center\">\n                  {activity.tags && activity.tags.map((tag, index) => (\n                    <span key={index} className=\"bg-highlight text-white text-xs px-2 py-1 rounded-full\">\n                      {tag}\n                    </span>\n                  ))}\n                </div>\n                {activity.link && (\n                  <a\n                    href={activity.link}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"mt-auto bg-highlight text-white py-2 px-4 rounded-md hover:bg-opacity-90 transition-colors duration-200 text-center\"\n                  >\n                    {activity.category === 'music' ? 'Listen Now' :\n                     activity.category === 'books' ? 'Read More' :\n                     activity.category === 'movies' ? 'Watch Now' :\n                     'Start Activity'}\n                  </a>\n                )}\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"text-center text-gray-700 text-lg\">\n            <p className=\"mb-4\">No specific recommendations found based on your preferences.</p>\n            <p>Try updating your preferences or refreshing for generic suggestions.</p>\n          </div>\n        )}\n\n        <div className=\"flex justify-center gap-4 mt-8\">\n          <button\n            onClick={generateRecommendations}\n            className=\"bg-green-500 text-white py-2 px-4 rounded-md hover:bg-green-600 transition-colors duration-200\"\n          >\n            Refresh Suggestions\n          </button>\n          <Link\n            to=\"/account\"\n            className=\"bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition-colors duration-200\"\n          >\n            Update My Preferences\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ActivityRecommendationsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}