{"ast":null,"code":"var _jsxFileName = \"/Users/iantoyota/Desktop/my-mindscape/src/pages/MoodPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { db } from '../firebaseConfig';\nimport { collection, addDoc, serverTimestamp } from 'firebase/firestore';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoodPage = () => {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  const [moodText, setMoodText] = useState('');\n  const [selectedEmoji, setSelectedEmoji] = useState(null);\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n\n  // Emojis representing a spectrum of moods\n  const emojis = [{\n    emoji: '😞',\n    value: 'very_sad'\n  }, {\n    emoji: '😔',\n    value: 'sad'\n  }, {\n    emoji: '😐',\n    value: 'neutral'\n  }, {\n    emoji: '😊',\n    value: 'happy'\n  }, {\n    emoji: '😁',\n    value: 'very_happy'\n  }];\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage('');\n    setError('');\n    if (!currentUser) {\n      setError('You must be logged in to log your mood.');\n      return;\n    }\n    if (!selectedEmoji) {\n      setError('Please select an emoji to log your mood.');\n      return;\n    }\n    try {\n      await addDoc(collection(db, 'moods'), {\n        userId: currentUser.uid,\n        moodText,\n        selectedEmoji: selectedEmoji.value,\n        timestamp: serverTimestamp()\n      });\n      setMessage('Mood logged successfully!');\n      setMoodText('');\n      setSelectedEmoji(null);\n    } catch (err) {\n      console.error('Error logging mood:', err);\n      setError('Failed to log mood. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-[calc(100vh-80px)]\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-8 rounded-lg shadow-lg w-full max-w-2xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold mb-6 text-center text-text-dark\",\n        children: \"How are you feeling today?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"bg-green-100 text-green-800 p-3 mb-4 rounded text-center\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"bg-red-100 text-red-800 p-3 mb-4 rounded text-center\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"w-full p-3 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-highlight focus:border-transparent resize-y\",\n            rows: \"5\",\n            placeholder: \"Share what's on your mind...\",\n            value: moodText,\n            onChange: e => setMoodText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center space-x-4 mb-6\",\n          children: emojis.map(emojiObj => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `text-5xl cursor-pointer p-2 rounded-full transition-all duration-200 ease-in-out\n                  ${selectedEmoji && selectedEmoji.value === emojiObj.value ? 'ring-4 ring-highlight scale-110' : 'hover:scale-105'}`,\n            onClick: () => setSelectedEmoji(emojiObj),\n            children: emojiObj.emoji\n          }, emojiObj.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center text-sm italic text-gray-600 mb-6\",\n          children: \"Even a few words can help you understand yourself better.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"w-full bg-highlight text-white font-bold py-3 px-4 rounded-md hover:bg-opacity-90 transition-colors duration-200 ease-in-out disabled:bg-gray-400 disabled:cursor-not-allowed\",\n          disabled: !selectedEmoji,\n          children: \"Log Mood\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(MoodPage, \"3ToCCOsDr/BCYVIApWi8rYEQLPg=\", false, function () {\n  return [useAuth];\n});\n_c = MoodPage;\nexport default MoodPage;\nvar _c;\n$RefreshReg$(_c, \"MoodPage\");","map":{"version":3,"names":["React","useState","db","collection","addDoc","serverTimestamp","useAuth","jsxDEV","_jsxDEV","MoodPage","_s","currentUser","moodText","setMoodText","selectedEmoji","setSelectedEmoji","message","setMessage","error","setError","emojis","emoji","value","handleSubmit","e","preventDefault","userId","uid","timestamp","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","rows","placeholder","onChange","target","map","emojiObj","onClick","type","disabled","_c","$RefreshReg$"],"sources":["/Users/iantoyota/Desktop/my-mindscape/src/pages/MoodPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { db } from '../firebaseConfig';\nimport { collection, addDoc, serverTimestamp } from 'firebase/firestore';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst MoodPage = () => {\n  const { currentUser } = useAuth();\n  const [moodText, setMoodText] = useState('');\n  const [selectedEmoji, setSelectedEmoji] = useState(null);\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n\n  // Emojis representing a spectrum of moods\n  const emojis = [\n    { emoji: '😞', value: 'very_sad' },\n    { emoji: '😔', value: 'sad' },\n    { emoji: '😐', value: 'neutral' },\n    { emoji: '😊', value: 'happy' },\n    { emoji: '😁', value: 'very_happy' },\n  ];\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setMessage('');\n    setError('');\n\n    if (!currentUser) {\n      setError('You must be logged in to log your mood.');\n      return;\n    }\n\n    if (!selectedEmoji) {\n      setError('Please select an emoji to log your mood.');\n      return;\n    }\n\n    try {\n      await addDoc(collection(db, 'moods'), {\n        userId: currentUser.uid,\n        moodText,\n        selectedEmoji: selectedEmoji.value,\n        timestamp: serverTimestamp(),\n      });\n      setMessage('Mood logged successfully!');\n      setMoodText('');\n      setSelectedEmoji(null);\n    } catch (err) {\n      console.error('Error logging mood:', err);\n      setError('Failed to log mood. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"flex items-center justify-center min-h-[calc(100vh-80px)]\"> {/* Adjust min-h to account for header */}\n      <div className=\"bg-white p-8 rounded-lg shadow-lg w-full max-w-2xl\">\n        <h2 className=\"text-3xl font-bold mb-6 text-center text-text-dark\">How are you feeling today?</h2>\n\n        {message && <p className=\"bg-green-100 text-green-800 p-3 mb-4 rounded text-center\">{message}</p>}\n        {error && <p className=\"bg-red-100 text-red-800 p-3 mb-4 rounded text-center\">{error}</p>}\n\n        <form onSubmit={handleSubmit}>\n          {/* Text Entry Box */}\n          <div className=\"mb-6\">\n            <textarea\n              className=\"w-full p-3 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-highlight focus:border-transparent resize-y\"\n              rows=\"5\"\n              placeholder=\"Share what's on your mind...\"\n              value={moodText}\n              onChange={(e) => setMoodText(e.target.value)}\n            ></textarea>\n          </div>\n\n          {/* Emoji Mood Selector */}\n          <div className=\"flex justify-center space-x-4 mb-6\">\n            {emojis.map((emojiObj) => (\n              <span\n                key={emojiObj.value}\n                className={`text-5xl cursor-pointer p-2 rounded-full transition-all duration-200 ease-in-out\n                  ${selectedEmoji && selectedEmoji.value === emojiObj.value ? 'ring-4 ring-highlight scale-110' : 'hover:scale-105'}`}\n                onClick={() => setSelectedEmoji(emojiObj)}\n              >\n                {emojiObj.emoji}\n              </span>\n            ))}\n          </div>\n\n          {/* Nudging Text */}\n          <p className=\"text-center text-sm italic text-gray-600 mb-6\">\n            Even a few words can help you understand yourself better.\n          </p>\n\n          {/* Submit Button */}\n          <button\n            type=\"submit\"\n            className=\"w-full bg-highlight text-white font-bold py-3 px-4 rounded-md hover:bg-opacity-90 transition-colors duration-200 ease-in-out\n              disabled:bg-gray-400 disabled:cursor-not-allowed\"\n            disabled={!selectedEmoji}\n          >\n            Log Mood\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default MoodPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}