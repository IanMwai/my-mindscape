{"ast":null,"code":"var _jsxFileName = \"/Users/iantoyota/Desktop/my-mindscape/src/pages/ActivityRecsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { db } from '../firebaseConfig';\nimport { doc, getDoc, collection, getDocs } from 'firebase/firestore';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActivityRecommendationsPage = () => {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  const [userPreferences, setUserPreferences] = useState({});\n  const [allStaticActivities, setAllStaticActivities] = useState([]);\n  const [recommendedActivities, setRecommendedActivities] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Function to fetch data, memoized with useCallback\n  const fetchData = useCallback(async () => {\n    if (!currentUser) {\n      setError('You must be logged in to view activity recommendations.');\n      setLoading(false);\n      return;\n    }\n    setLoading(true); // Set loading to true before fetching data\n    setError(''); // Clear any previous errors\n\n    try {\n      // Fetch user preferences\n      const userDocRef = doc(db, 'users', currentUser.uid);\n      const userDocSnap = await getDoc(userDocRef);\n      if (userDocSnap.exists()) {\n        setUserPreferences(userDocSnap.data().activityPreferences || {});\n      } else {\n        setUserPreferences({}); // Ensure preferences are reset if user doc doesn't exist\n      }\n\n      // Fetch static activities\n      const activitiesCollectionRef = collection(db, 'staticActivities');\n      const activitiesSnapshot = await getDocs(activitiesCollectionRef);\n      const activitiesData = activitiesSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setAllStaticActivities(activitiesData);\n      console.log(\"Fetched Static Activities:\", activitiesData); // Debugging line\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load recommendations. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  }, [currentUser]); // Dependency on currentUser\n\n  // Fetch data on component mount\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]); // Dependency on fetchData\n\n  // Generate recommendations whenever preferences or static activities change, or after initial load\n  useEffect(() => {\n    if (!loading && allStaticActivities.length > 0) {\n      generateRecommendations();\n    } else if (!loading && allStaticActivities.length === 0) {\n      // If no static activities are found, ensure recommendations are cleared\n      setRecommendedActivities([]);\n    }\n  }, [loading, userPreferences, allStaticActivities]);\n  const generateRecommendations = () => {\n    const numRecommendations = 3; // Number of recommendations to display\n    let filteredActivities = [];\n\n    // Filtering logic based on user preferences\n    if (userPreferences) {\n      allStaticActivities.forEach(activity => {\n        let isMatch = false;\n\n        // Match by category and genre (music, books, movies)\n        if (userPreferences.musicGenres && activity.category === 'music') {\n          if (activity.genre && userPreferences.musicGenres.includes(activity.genre)) {\n            isMatch = true;\n          } else if (!activity.genre && userPreferences.musicGenres.length > 0) {\n            // If no specific genre, but user has music preferences\n            isMatch = true;\n          }\n        }\n        if (userPreferences.bookGenres && activity.category === 'books') {\n          if (activity.genre && userPreferences.bookGenres.includes(activity.genre)) {\n            isMatch = true;\n          } else if (!activity.genre && userPreferences.bookGenres.length > 0) {\n            isMatch = true;\n          }\n        }\n        if (userPreferences.movieGenres && activity.category === 'movies') {\n          if (activity.genre && userPreferences.movieGenres.includes(activity.genre)) {\n            isMatch = true;\n          } else if (!activity.genre && userPreferences.movieGenres.length > 0) {\n            isMatch = true;\n          }\n        }\n\n        // Match by physical activities (title included in preferences array)\n        if (userPreferences.physicalActivities && activity.category === 'physical') {\n          if (userPreferences.physicalActivities.includes(activity.title)) {\n            isMatch = true;\n          }\n        }\n\n        // Match by other interests (tags overlap)\n        if (userPreferences.otherInterests && activity.tags && activity.tags.length > 0) {\n          const commonTags = activity.tags.filter(tag => userPreferences.otherInterests.includes(tag));\n          if (commonTags.length > 0) {\n            isMatch = true;\n          }\n        }\n        if (isMatch) {\n          filteredActivities.push(activity);\n        }\n      });\n    }\n\n    // Fallback recommendations if no specific matches or not enough matches\n    let finalRecommendations = [];\n    if (filteredActivities.length === 0) {\n      // Randomly select from all static activities if no matches\n      const shuffledActivities = [...allStaticActivities].sort(() => 0.5 - Math.random());\n      finalRecommendations = shuffledActivities.slice(0, numRecommendations);\n    } else {\n      // Randomly select from filtered activities\n      const shuffledFiltered = [...filteredActivities].sort(() => 0.5 - Math.random());\n      finalRecommendations = shuffledFiltered.slice(0, numRecommendations);\n\n      // If not enough filtered activities, supplement with random ones\n      if (finalRecommendations.length < numRecommendations) {\n        const remainingNeeded = numRecommendations - finalRecommendations.length;\n        const existingIds = new Set(finalRecommendations.map(rec => rec.id));\n        const supplementalActivities = allStaticActivities.filter(act => !existingIds.has(act.id)).sort(() => 0.5 - Math.random()).slice(0, remainingNeeded);\n        finalRecommendations = [...finalRecommendations, ...supplementalActivities];\n      }\n    }\n    setRecommendedActivities(finalRecommendations);\n  };\n  const getCategoryIcon = category => {\n    switch (category) {\n      case 'music':\n        return 'ðŸŽµ';\n      case 'books':\n        return 'ðŸ“š';\n      case 'movies':\n        return 'ðŸŽ¬';\n      case 'physical':\n        return 'ðŸ’ª';\n      default:\n        return 'âœ¨';\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-text-dark text-lg\",\n      children: \"Loading recommendations...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-red-500 text-lg\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-[calc(100vh-80px)]\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-secondary-bg p-6 rounded-lg shadow-lg w-full max-w-4xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold mb-6 text-center text-text-dark\",\n        children: \"Activities to Brighten Your Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), recommendedActivities.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n        children: recommendedActivities.map(activity => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-4xl mb-2 text-center\",\n            children: getCategoryIcon(activity.category)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold mb-2 text-text-dark text-center\",\n            children: activity.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-700 text-sm mb-4 flex-grow\",\n            children: activity.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap gap-2 mb-4 justify-center\",\n            children: activity.tags && activity.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bg-highlight text-white text-xs px-2 py-1 rounded-full\",\n              children: tag\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this), activity.link && /*#__PURE__*/_jsxDEV(\"a\", {\n            href: activity.link,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"mt-auto bg-highlight text-white py-2 px-4 rounded-md hover:bg-opacity-90 transition-colors duration-200 text-center\",\n            children: activity.category === 'music' ? 'Listen Now' : activity.category === 'books' ? 'Read More' : activity.category === 'movies' ? 'Watch Now' : 'Start Activity'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 19\n          }, this)]\n        }, activity.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-700 text-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-4\",\n          children: \"No specific recommendations found based on your preferences.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Try updating your preferences or refreshing for generic suggestions.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center gap-4 mt-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchData,\n          className: \"bg-green-500 text-white py-2 px-4 rounded-md hover:bg-green-600 transition-colors duration-200\",\n          children: \"Refresh Suggestions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/update-preferences\",\n          className: \"bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition-colors duration-200\",\n          children: \"Update My Preferences\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(ActivityRecommendationsPage, \"5StkTcKsfQlni6pxUlHK8Wpnr7U=\", false, function () {\n  return [useAuth];\n});\n_c = ActivityRecommendationsPage;\nexport default ActivityRecommendationsPage;\nvar _c;\n$RefreshReg$(_c, \"ActivityRecommendationsPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","db","doc","getDoc","collection","getDocs","useAuth","Link","jsxDEV","_jsxDEV","ActivityRecommendationsPage","_s","currentUser","userPreferences","setUserPreferences","allStaticActivities","setAllStaticActivities","recommendedActivities","setRecommendedActivities","loading","setLoading","error","setError","fetchData","userDocRef","uid","userDocSnap","exists","data","activityPreferences","activitiesCollectionRef","activitiesSnapshot","activitiesData","docs","map","id","console","log","err","length","generateRecommendations","numRecommendations","filteredActivities","forEach","activity","isMatch","musicGenres","category","genre","includes","bookGenres","movieGenres","physicalActivities","title","otherInterests","tags","commonTags","filter","tag","push","finalRecommendations","shuffledActivities","sort","Math","random","slice","shuffledFiltered","remainingNeeded","existingIds","Set","rec","supplementalActivities","act","has","getCategoryIcon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","description","index","link","href","target","rel","onClick","to","_c","$RefreshReg$"],"sources":["/Users/iantoyota/Desktop/my-mindscape/src/pages/ActivityRecsPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { db } from '../firebaseConfig';\nimport { doc, getDoc, collection, getDocs } from 'firebase/firestore';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Link } from 'react-router-dom';\n\nconst ActivityRecommendationsPage = () => {\n  const { currentUser } = useAuth();\n  const [userPreferences, setUserPreferences] = useState({});\n  const [allStaticActivities, setAllStaticActivities] = useState([]);\n  const [recommendedActivities, setRecommendedActivities] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Function to fetch data, memoized with useCallback\n  const fetchData = useCallback(async () => {\n    if (!currentUser) {\n      setError('You must be logged in to view activity recommendations.');\n      setLoading(false);\n      return;\n    }\n\n    setLoading(true); // Set loading to true before fetching data\n    setError(''); // Clear any previous errors\n\n    try {\n      // Fetch user preferences\n      const userDocRef = doc(db, 'users', currentUser.uid);\n      const userDocSnap = await getDoc(userDocRef);\n      if (userDocSnap.exists()) {\n        setUserPreferences(userDocSnap.data().activityPreferences || {});\n      } else {\n        setUserPreferences({}); // Ensure preferences are reset if user doc doesn't exist\n      }\n\n      // Fetch static activities\n      const activitiesCollectionRef = collection(db, 'staticActivities');\n      const activitiesSnapshot = await getDocs(activitiesCollectionRef);\n      const activitiesData = activitiesSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n      setAllStaticActivities(activitiesData);\n      console.log(\"Fetched Static Activities:\", activitiesData); // Debugging line\n\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load recommendations. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  }, [currentUser]); // Dependency on currentUser\n\n  // Fetch data on component mount\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]); // Dependency on fetchData\n\n  // Generate recommendations whenever preferences or static activities change, or after initial load\n  useEffect(() => {\n    if (!loading && allStaticActivities.length > 0) {\n      generateRecommendations();\n    } else if (!loading && allStaticActivities.length === 0) {\n      // If no static activities are found, ensure recommendations are cleared\n      setRecommendedActivities([]);\n    }\n  }, [loading, userPreferences, allStaticActivities]);\n\n  const generateRecommendations = () => {\n    const numRecommendations = 3; // Number of recommendations to display\n    let filteredActivities = [];\n\n    // Filtering logic based on user preferences\n    if (userPreferences) {\n      allStaticActivities.forEach(activity => {\n        let isMatch = false;\n\n        // Match by category and genre (music, books, movies)\n        if (userPreferences.musicGenres && activity.category === 'music') {\n          if (activity.genre && userPreferences.musicGenres.includes(activity.genre)) {\n            isMatch = true;\n          } else if (!activity.genre && userPreferences.musicGenres.length > 0) { // If no specific genre, but user has music preferences\n            isMatch = true;\n          }\n        }\n        if (userPreferences.bookGenres && activity.category === 'books') {\n          if (activity.genre && userPreferences.bookGenres.includes(activity.genre)) {\n            isMatch = true;\n          } else if (!activity.genre && userPreferences.bookGenres.length > 0) {\n            isMatch = true;\n          }\n        }\n        if (userPreferences.movieGenres && activity.category === 'movies') {\n          if (activity.genre && userPreferences.movieGenres.includes(activity.genre)) {\n            isMatch = true;\n          } else if (!activity.genre && userPreferences.movieGenres.length > 0) {\n            isMatch = true;\n          }\n        }\n\n        // Match by physical activities (title included in preferences array)\n        if (userPreferences.physicalActivities && activity.category === 'physical') {\n          if (userPreferences.physicalActivities.includes(activity.title)) {\n            isMatch = true;\n          }\n        }\n\n        // Match by other interests (tags overlap)\n        if (userPreferences.otherInterests && activity.tags && activity.tags.length > 0) {\n          const commonTags = activity.tags.filter(tag => userPreferences.otherInterests.includes(tag));\n          if (commonTags.length > 0) {\n            isMatch = true;\n          }\n        }\n\n        if (isMatch) {\n          filteredActivities.push(activity);\n        }\n      });\n    }\n\n    // Fallback recommendations if no specific matches or not enough matches\n    let finalRecommendations = [];\n    if (filteredActivities.length === 0) {\n      // Randomly select from all static activities if no matches\n      const shuffledActivities = [...allStaticActivities].sort(() => 0.5 - Math.random());\n      finalRecommendations = shuffledActivities.slice(0, numRecommendations);\n    } else {\n      // Randomly select from filtered activities\n      const shuffledFiltered = [...filteredActivities].sort(() => 0.5 - Math.random());\n      finalRecommendations = shuffledFiltered.slice(0, numRecommendations);\n\n      // If not enough filtered activities, supplement with random ones\n      if (finalRecommendations.length < numRecommendations) {\n        const remainingNeeded = numRecommendations - finalRecommendations.length;\n        const existingIds = new Set(finalRecommendations.map(rec => rec.id));\n        const supplementalActivities = allStaticActivities.filter(act => !existingIds.has(act.id))\n                                                          .sort(() => 0.5 - Math.random())\n                                                          .slice(0, remainingNeeded);\n        finalRecommendations = [...finalRecommendations, ...supplementalActivities];\n      }\n    }\n\n    setRecommendedActivities(finalRecommendations);\n  };\n\n  const getCategoryIcon = (category) => {\n    switch (category) {\n      case 'music': return 'ðŸŽµ';\n      case 'books': return 'ðŸ“š';\n      case 'movies': return 'ðŸŽ¬';\n      case 'physical': return 'ðŸ’ª';\n      default: return 'âœ¨';\n    }\n  };\n\n  if (loading) {\n    return <div className=\"text-center text-text-dark text-lg\">Loading recommendations...</div>;\n  }\n\n  if (error) {\n    return <div className=\"text-center text-red-500 text-lg\">Error: {error}</div>;\n  }\n\n  return (\n    <div className=\"flex items-center justify-center min-h-[calc(100vh-80px)]\">\n      <div className=\"bg-secondary-bg p-6 rounded-lg shadow-lg w-full max-w-4xl\">\n        <h2 className=\"text-3xl font-bold mb-6 text-center text-text-dark\">Activities to Brighten Your Day</h2>\n\n        {recommendedActivities.length > 0 ? (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {recommendedActivities.map(activity => (\n              <div key={activity.id} className=\"bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow flex flex-col\">\n                <div className=\"text-4xl mb-2 text-center\">{getCategoryIcon(activity.category)}</div>\n                <h3 className=\"text-xl font-semibold mb-2 text-text-dark text-center\">{activity.title}</h3>\n                <p className=\"text-gray-700 text-sm mb-4 flex-grow\">{activity.description}</p>\n                <div className=\"flex flex-wrap gap-2 mb-4 justify-center\">\n                  {activity.tags && activity.tags.map((tag, index) => (\n                    <span key={index} className=\"bg-highlight text-white text-xs px-2 py-1 rounded-full\">\n                      {tag}\n                    </span>\n                  ))}\n                </div>\n                {activity.link && (\n                  <a\n                    href={activity.link}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"mt-auto bg-highlight text-white py-2 px-4 rounded-md hover:bg-opacity-90 transition-colors duration-200 text-center\"\n                  >\n                    {activity.category === 'music' ? 'Listen Now' :\n                     activity.category === 'books' ? 'Read More' :\n                     activity.category === 'movies' ? 'Watch Now' :\n                     'Start Activity'}\n                  </a>\n                )}\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"text-center text-gray-700 text-lg\">\n            <p className=\"mb-4\">No specific recommendations found based on your preferences.</p>\n            <p>Try updating your preferences or refreshing for generic suggestions.</p>\n          </div>\n        )}\n\n        <div className=\"flex justify-center gap-4 mt-8\">\n          <button\n            onClick={fetchData}\n            className=\"bg-green-500 text-white py-2 px-4 rounded-md hover:bg-green-600 transition-colors duration-200\"\n          >\n            Refresh Suggestions\n          </button>\n          <Link\n            to=\"/update-preferences\"\n            className=\"bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition-colors duration-200\"\n          >\n            Update My Preferences\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ActivityRecommendationsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}