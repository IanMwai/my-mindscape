{"ast":null,"code":"import _objectSpread from\"/Users/iantoyota/Desktop/my-mindscape/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback}from'react';import{db}from'../firebaseConfig';import{doc,getDoc,collection,getDocs}from'firebase/firestore';import{useAuth}from'../contexts/AuthContext';import{Link}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ActivityRecommendationsPage=()=>{const{currentUser}=useAuth();const[userPreferences,setUserPreferences]=useState({});const[allStaticActivities,setAllStaticActivities]=useState([]);const[recommendedActivities,setRecommendedActivities]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState('');// Function to fetch data, memoized with useCallback\nconst fetchData=useCallback(async()=>{if(!currentUser){setError('You must be logged in to view activity recommendations.');setLoading(false);return;}setLoading(true);// Set loading to true before fetching data\nsetError('');// Clear any previous errors\ntry{// Fetch user preferences\nconst userDocRef=doc(db,'users',currentUser.uid);const userDocSnap=await getDoc(userDocRef);if(userDocSnap.exists()){setUserPreferences(userDocSnap.data().activityPreferences||{});}else{setUserPreferences({});// Ensure preferences are reset if user doc doesn't exist\n}// Fetch static activities\nconst activitiesCollectionRef=collection(db,'staticActivities');const activitiesSnapshot=await getDocs(activitiesCollectionRef);const activitiesData=activitiesSnapshot.docs.map(doc=>_objectSpread({id:doc.id},doc.data()));setAllStaticActivities(activitiesData);console.log(\"Fetched Static Activities:\",activitiesData);// Debugging line\n}catch(err){console.error('Error fetching data:',err);setError('Failed to load recommendations. Please try again.');}finally{setLoading(false);}},[currentUser]);// Dependency on currentUser\n// Fetch data on component mount\nuseEffect(()=>{fetchData();},[fetchData]);// Dependency on fetchData\n// Generate recommendations whenever preferences or static activities change, or after initial load\nuseEffect(()=>{if(!loading&&allStaticActivities.length>0){generateRecommendations();}else if(!loading&&allStaticActivities.length===0){// If no static activities are found, ensure recommendations are cleared\nsetRecommendedActivities([]);}},[loading,userPreferences,allStaticActivities]);const generateRecommendations=()=>{const numRecommendations=3;// Number of recommendations to display\nlet filteredActivities=[];// Filtering logic based on user preferences\nif(userPreferences){allStaticActivities.forEach(activity=>{let isMatch=false;// Match by category and genre (music, books, movies)\nif(userPreferences.musicGenres&&activity.category==='music'){if(activity.genre&&userPreferences.musicGenres.includes(activity.genre)){isMatch=true;}else if(!activity.genre&&userPreferences.musicGenres.length>0){// If no specific genre, but user has music preferences\nisMatch=true;}}if(userPreferences.bookGenres&&activity.category==='books'){if(activity.genre&&userPreferences.bookGenres.includes(activity.genre)){isMatch=true;}else if(!activity.genre&&userPreferences.bookGenres.length>0){isMatch=true;}}if(userPreferences.movieGenres&&activity.category==='movies'){if(activity.genre&&userPreferences.movieGenres.includes(activity.genre)){isMatch=true;}else if(!activity.genre&&userPreferences.movieGenres.length>0){isMatch=true;}}// Match by physical activities (title included in preferences array)\nif(userPreferences.physicalActivities&&activity.category==='physical'){if(userPreferences.physicalActivities.includes(activity.title)){isMatch=true;}}// Match by other interests (tags overlap)\nif(userPreferences.otherInterests&&activity.tags&&activity.tags.length>0){const commonTags=activity.tags.filter(tag=>userPreferences.otherInterests.includes(tag));if(commonTags.length>0){isMatch=true;}}if(isMatch){filteredActivities.push(activity);}});}// Fallback recommendations if no specific matches or not enough matches\nlet finalRecommendations=[];if(filteredActivities.length===0){// Randomly select from all static activities if no matches\nconst shuffledActivities=[...allStaticActivities].sort(()=>0.5-Math.random());finalRecommendations=shuffledActivities.slice(0,numRecommendations);}else{// Randomly select from filtered activities\nconst shuffledFiltered=[...filteredActivities].sort(()=>0.5-Math.random());finalRecommendations=shuffledFiltered.slice(0,numRecommendations);// If not enough filtered activities, supplement with random ones\nif(finalRecommendations.length<numRecommendations){const remainingNeeded=numRecommendations-finalRecommendations.length;const existingIds=new Set(finalRecommendations.map(rec=>rec.id));const supplementalActivities=allStaticActivities.filter(act=>!existingIds.has(act.id)).sort(()=>0.5-Math.random()).slice(0,remainingNeeded);finalRecommendations=[...finalRecommendations,...supplementalActivities];}}setRecommendedActivities(finalRecommendations);};const getCategoryIcon=category=>{switch(category){case'music':return'ðŸŽµ';case'books':return'ðŸ“š';case'movies':return'ðŸŽ¬';case'physical':return'ðŸ’ª';default:return'âœ¨';}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"text-center text-text-dark text-lg\",children:\"Loading recommendations...\"});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"text-center text-red-500 text-lg\",children:[\"Error: \",error]});}return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center min-h-[calc(100vh-80px)]\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-secondary-bg p-6 rounded-lg shadow-lg w-full max-w-4xl\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-3xl font-bold mb-6 text-center text-text-dark\",children:\"Activities to Brighten Your Day\"}),recommendedActivities.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",children:recommendedActivities.map(activity=>/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow flex flex-col\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-4xl mb-2 text-center\",children:getCategoryIcon(activity.category)}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold mb-2 text-text-dark text-center\",children:activity.title}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-700 text-sm mb-4 flex-grow\",children:activity.description}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2 mb-4 justify-center\",children:activity.tags&&activity.tags.map((tag,index)=>/*#__PURE__*/_jsx(\"span\",{className:\"bg-highlight text-white text-xs px-2 py-1 rounded-full\",children:tag},index))}),activity.link&&/*#__PURE__*/_jsx(\"a\",{href:activity.link,target:\"_blank\",rel:\"noopener noreferrer\",className:\"mt-auto bg-highlight text-white py-2 px-4 rounded-md hover:bg-opacity-90 transition-colors duration-200 text-center\",children:activity.category==='music'?'Listen Now':activity.category==='books'?'Read More':activity.category==='movies'?'Watch Now':'Start Activity'})]},activity.id))}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center text-gray-700 text-lg\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"mb-4\",children:\"No specific recommendations found based on your preferences.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Try updating your preferences or refreshing for generic suggestions.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center gap-4 mt-8\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:fetchData,className:\"bg-green-500 text-white py-2 px-4 rounded-md hover:bg-green-600 transition-colors duration-200\",children:\"Refresh Suggestions\"}),/*#__PURE__*/_jsx(Link,{to:\"/update-preferences\",className:\"bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition-colors duration-200\",children:\"Update My Preferences\"})]})]})});};export default ActivityRecommendationsPage;","map":{"version":3,"names":["React","useState","useEffect","useCallback","db","doc","getDoc","collection","getDocs","useAuth","Link","jsx","_jsx","jsxs","_jsxs","ActivityRecommendationsPage","currentUser","userPreferences","setUserPreferences","allStaticActivities","setAllStaticActivities","recommendedActivities","setRecommendedActivities","loading","setLoading","error","setError","fetchData","userDocRef","uid","userDocSnap","exists","data","activityPreferences","activitiesCollectionRef","activitiesSnapshot","activitiesData","docs","map","_objectSpread","id","console","log","err","length","generateRecommendations","numRecommendations","filteredActivities","forEach","activity","isMatch","musicGenres","category","genre","includes","bookGenres","movieGenres","physicalActivities","title","otherInterests","tags","commonTags","filter","tag","push","finalRecommendations","shuffledActivities","sort","Math","random","slice","shuffledFiltered","remainingNeeded","existingIds","Set","rec","supplementalActivities","act","has","getCategoryIcon","className","children","description","index","link","href","target","rel","onClick","to"],"sources":["/Users/iantoyota/Desktop/my-mindscape/src/pages/ActivityRecsPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { db } from '../firebaseConfig';\nimport { doc, getDoc, collection, getDocs } from 'firebase/firestore';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Link } from 'react-router-dom';\n\nconst ActivityRecommendationsPage = () => {\n  const { currentUser } = useAuth();\n  const [userPreferences, setUserPreferences] = useState({});\n  const [allStaticActivities, setAllStaticActivities] = useState([]);\n  const [recommendedActivities, setRecommendedActivities] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Function to fetch data, memoized with useCallback\n  const fetchData = useCallback(async () => {\n    if (!currentUser) {\n      setError('You must be logged in to view activity recommendations.');\n      setLoading(false);\n      return;\n    }\n\n    setLoading(true); // Set loading to true before fetching data\n    setError(''); // Clear any previous errors\n\n    try {\n      // Fetch user preferences\n      const userDocRef = doc(db, 'users', currentUser.uid);\n      const userDocSnap = await getDoc(userDocRef);\n      if (userDocSnap.exists()) {\n        setUserPreferences(userDocSnap.data().activityPreferences || {});\n      } else {\n        setUserPreferences({}); // Ensure preferences are reset if user doc doesn't exist\n      }\n\n      // Fetch static activities\n      const activitiesCollectionRef = collection(db, 'staticActivities');\n      const activitiesSnapshot = await getDocs(activitiesCollectionRef);\n      const activitiesData = activitiesSnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n      setAllStaticActivities(activitiesData);\n      console.log(\"Fetched Static Activities:\", activitiesData); // Debugging line\n\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError('Failed to load recommendations. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  }, [currentUser]); // Dependency on currentUser\n\n  // Fetch data on component mount\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]); // Dependency on fetchData\n\n  // Generate recommendations whenever preferences or static activities change, or after initial load\n  useEffect(() => {\n    if (!loading && allStaticActivities.length > 0) {\n      generateRecommendations();\n    } else if (!loading && allStaticActivities.length === 0) {\n      // If no static activities are found, ensure recommendations are cleared\n      setRecommendedActivities([]);\n    }\n  }, [loading, userPreferences, allStaticActivities]);\n\n  const generateRecommendations = () => {\n    const numRecommendations = 3; // Number of recommendations to display\n    let filteredActivities = [];\n\n    // Filtering logic based on user preferences\n    if (userPreferences) {\n      allStaticActivities.forEach(activity => {\n        let isMatch = false;\n\n        // Match by category and genre (music, books, movies)\n        if (userPreferences.musicGenres && activity.category === 'music') {\n          if (activity.genre && userPreferences.musicGenres.includes(activity.genre)) {\n            isMatch = true;\n          } else if (!activity.genre && userPreferences.musicGenres.length > 0) { // If no specific genre, but user has music preferences\n            isMatch = true;\n          }\n        }\n        if (userPreferences.bookGenres && activity.category === 'books') {\n          if (activity.genre && userPreferences.bookGenres.includes(activity.genre)) {\n            isMatch = true;\n          } else if (!activity.genre && userPreferences.bookGenres.length > 0) {\n            isMatch = true;\n          }\n        }\n        if (userPreferences.movieGenres && activity.category === 'movies') {\n          if (activity.genre && userPreferences.movieGenres.includes(activity.genre)) {\n            isMatch = true;\n          } else if (!activity.genre && userPreferences.movieGenres.length > 0) {\n            isMatch = true;\n          }\n        }\n\n        // Match by physical activities (title included in preferences array)\n        if (userPreferences.physicalActivities && activity.category === 'physical') {\n          if (userPreferences.physicalActivities.includes(activity.title)) {\n            isMatch = true;\n          }\n        }\n\n        // Match by other interests (tags overlap)\n        if (userPreferences.otherInterests && activity.tags && activity.tags.length > 0) {\n          const commonTags = activity.tags.filter(tag => userPreferences.otherInterests.includes(tag));\n          if (commonTags.length > 0) {\n            isMatch = true;\n          }\n        }\n\n        if (isMatch) {\n          filteredActivities.push(activity);\n        }\n      });\n    }\n\n    // Fallback recommendations if no specific matches or not enough matches\n    let finalRecommendations = [];\n    if (filteredActivities.length === 0) {\n      // Randomly select from all static activities if no matches\n      const shuffledActivities = [...allStaticActivities].sort(() => 0.5 - Math.random());\n      finalRecommendations = shuffledActivities.slice(0, numRecommendations);\n    } else {\n      // Randomly select from filtered activities\n      const shuffledFiltered = [...filteredActivities].sort(() => 0.5 - Math.random());\n      finalRecommendations = shuffledFiltered.slice(0, numRecommendations);\n\n      // If not enough filtered activities, supplement with random ones\n      if (finalRecommendations.length < numRecommendations) {\n        const remainingNeeded = numRecommendations - finalRecommendations.length;\n        const existingIds = new Set(finalRecommendations.map(rec => rec.id));\n        const supplementalActivities = allStaticActivities.filter(act => !existingIds.has(act.id))\n                                                          .sort(() => 0.5 - Math.random())\n                                                          .slice(0, remainingNeeded);\n        finalRecommendations = [...finalRecommendations, ...supplementalActivities];\n      }\n    }\n\n    setRecommendedActivities(finalRecommendations);\n  };\n\n  const getCategoryIcon = (category) => {\n    switch (category) {\n      case 'music': return 'ðŸŽµ';\n      case 'books': return 'ðŸ“š';\n      case 'movies': return 'ðŸŽ¬';\n      case 'physical': return 'ðŸ’ª';\n      default: return 'âœ¨';\n    }\n  };\n\n  if (loading) {\n    return <div className=\"text-center text-text-dark text-lg\">Loading recommendations...</div>;\n  }\n\n  if (error) {\n    return <div className=\"text-center text-red-500 text-lg\">Error: {error}</div>;\n  }\n\n  return (\n    <div className=\"flex items-center justify-center min-h-[calc(100vh-80px)]\">\n      <div className=\"bg-secondary-bg p-6 rounded-lg shadow-lg w-full max-w-4xl\">\n        <h2 className=\"text-3xl font-bold mb-6 text-center text-text-dark\">Activities to Brighten Your Day</h2>\n\n        {recommendedActivities.length > 0 ? (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {recommendedActivities.map(activity => (\n              <div key={activity.id} className=\"bg-white p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow flex flex-col\">\n                <div className=\"text-4xl mb-2 text-center\">{getCategoryIcon(activity.category)}</div>\n                <h3 className=\"text-xl font-semibold mb-2 text-text-dark text-center\">{activity.title}</h3>\n                <p className=\"text-gray-700 text-sm mb-4 flex-grow\">{activity.description}</p>\n                <div className=\"flex flex-wrap gap-2 mb-4 justify-center\">\n                  {activity.tags && activity.tags.map((tag, index) => (\n                    <span key={index} className=\"bg-highlight text-white text-xs px-2 py-1 rounded-full\">\n                      {tag}\n                    </span>\n                  ))}\n                </div>\n                {activity.link && (\n                  <a\n                    href={activity.link}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"mt-auto bg-highlight text-white py-2 px-4 rounded-md hover:bg-opacity-90 transition-colors duration-200 text-center\"\n                  >\n                    {activity.category === 'music' ? 'Listen Now' :\n                     activity.category === 'books' ? 'Read More' :\n                     activity.category === 'movies' ? 'Watch Now' :\n                     'Start Activity'}\n                  </a>\n                )}\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"text-center text-gray-700 text-lg\">\n            <p className=\"mb-4\">No specific recommendations found based on your preferences.</p>\n            <p>Try updating your preferences or refreshing for generic suggestions.</p>\n          </div>\n        )}\n\n        <div className=\"flex justify-center gap-4 mt-8\">\n          <button\n            onClick={fetchData}\n            className=\"bg-green-500 text-white py-2 px-4 rounded-md hover:bg-green-600 transition-colors duration-200\"\n          >\n            Refresh Suggestions\n          </button>\n          <Link\n            to=\"/update-preferences\"\n            className=\"bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 transition-colors duration-200\"\n          >\n            Update My Preferences\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ActivityRecommendationsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}